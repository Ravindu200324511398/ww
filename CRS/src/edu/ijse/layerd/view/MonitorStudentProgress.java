/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.layerd.view;

import edu.ijse.layerd.db.DBConnection;
//import edu.ijse.layerd.dto.CourseDetailsDto;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author ravindusaranga
 */
public class MonitorStudentProgress extends javax.swing.JFrame {

    /**
     * Creates new form MonitorStudentProgress
     */
    public MonitorStudentProgress() {
        initComponents();
        loadEnroll();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblHeader = new javax.swing.JLabel();
        lblStudentID = new javax.swing.JLabel();
        txtStudentID = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProgress = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHeader.setFont(new java.awt.Font("Impact", 1, 36)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(102, 102, 102));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("Monitor Student Progress");

        lblStudentID.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        lblStudentID.setText("StudentID");

        btnSearch.setFont(new java.awt.Font("Impact", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(102, 102, 102));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblProgress.setFont(new java.awt.Font("Impact", 1, 14)); // NOI18N
        tblProgress.setForeground(new java.awt.Color(204, 204, 204));
        tblProgress.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblProgress);

        btnBack.setFont(new java.awt.Font("Impact", 1, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(102, 102, 102));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(lblStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(938, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(69, 69, 69))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblStudentID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtStudentID, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
      String studentID = txtStudentID.getText().trim();
    
    if (studentID.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a Student ID", "Warning", JOptionPane.WARNING_MESSAGE);
        return;
    }

    DefaultTableModel model = (DefaultTableModel) tblProgress.getModel();
    ArrayList<Object[]> matchingRows = new ArrayList<>();
    ArrayList<Object[]> otherRows = new ArrayList<>();

    // Separate matching and non-matching rows
    for (int i = 0; i < model.getRowCount(); i++) {
        Object[] row = { model.getValueAt(i, 0), model.getValueAt(i, 1), model.getValueAt(i, 2),model.getValueAt(i,3) };
        if (model.getValueAt(i, 0).toString().equals(studentID)) {
            matchingRows.add(row); // Store matching rows
        } else {
            otherRows.add(row); // Store other rows
        }
    }

    if (matchingRows.isEmpty()) {
        JOptionPane.showMessageDialog(this, "No records found for Student ID: " + studentID, "Not Found", JOptionPane.INFORMATION_MESSAGE);
        return;
    }

    // Clear the table and re-add sorted rows
    model.setRowCount(0);
    for (Object[] row : matchingRows) {
        model.addRow(row); // Add matching rows first
    }
    for (Object[] row : otherRows) {
        model.addRow(row); // Add other rows after
    }

    // Highlight the matching rows
    tblProgress.clearSelection();
    for (int i = 0; i < matchingRows.size(); i++) {
        tblProgress.addRowSelectionInterval(i, i);
    }

    // Ensure the selected rows are visible at the top
    tblProgress.scrollRectToVisible(tblProgress.getCellRect(0, 0, true));
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        
        dispose();
        new FacultyDashboard().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSearch;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblStudentID;
    private javax.swing.JTable tblProgress;
    private javax.swing.JTextField txtStudentID;
    // End of variables declaration//GEN-END:variables

    private void loadEnroll() {
    DefaultTableModel model = new DefaultTableModel();
    model.setColumnIdentifiers(new String[]{"Student ID", "Course ID", "Grade","Semester"}); // Set column names
    
    try (Connection conn = DBConnection.getInstance().getConnection()) {
        String query = "SELECT StudentID, CourseID, Grade,Semester FROM Enrollment";
        PreparedStatement pstmt = conn.prepareStatement(query);
        ResultSet rs = pstmt.executeQuery();

        while (rs.next()) {
            String StudentID = rs.getString("StudentID");
            String CourseID = rs.getString("CourseID");
            String Grade = rs.getString("Grade");
            String Semester = rs.getString("Semester");
            model.addRow(new Object[]{StudentID, CourseID, Grade,Semester}); // Add row to table
        }

        tblProgress.setModel(model); // Set table model to display data

    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error loading student progress", "Error", JOptionPane.ERROR_MESSAGE);
    }
}


}